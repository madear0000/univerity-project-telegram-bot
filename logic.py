from startNow import howManyTaskShouldAddNow
from saveData import get_statistics 
from doLater import startLater

def addStartButton(types):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    startWorkButton = types.KeyboardButton("üìù –ó–∞–¥–∞—Ç—å –∑–∞–¥–∞—á—É")
    viewStatsButton = types.KeyboardButton("üëÅ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    markup.add(startWorkButton, viewStatsButton)
    return markup

def checkTimeToTask(message, bot, types):
    if message.text == "üöÄ –ù–∞—á–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ–π—á–∞—Å":
        bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–æ, —Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å?", reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, howManyTaskShouldAddNow, bot, types)
    elif message.text == "üïí –ó–∞–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ –∑–∞–¥–∞—á –ø–æ—Ç–æ–º":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        new_list = types.KeyboardButton("üìù –ó–∞–¥–∞—Ç—å –Ω–æ–≤—ã–π –≥—Ä–∞—Ñ–∏–∫")
        change_list = types.KeyboardButton("üìà –ò–∑–º–µ–Ω–∏—Ç—å —É–∂–µ –≥–æ—Ç–æ–≤—ã–π")
        markup.add(new_list)
        markup.add(change_list)
        bot.send_message(message.chat.id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å", reply_markup=markup)
        bot.register_next_step_handler(message, startLater, bot, types)
    elif message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ":
        markup = addStartButton(types)
        bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–æ, –∑–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞", reply_markup=markup)
        
def showStatistics(message, bot):
    total_tasks, total_time, difficulty_stats = get_statistics(message.chat.id)
    
    if total_tasks == 0:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.")
    else:
        stats_message = f"üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n" \
                        f"–í—Å–µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á: {total_tasks}\n" \
                        f"–û–±—â–µ–µ –≤—Ä–µ–º—è: {total_time} –º–∏–Ω—É—Ç\n\n" \
                        f"–°–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞—á:\n" \
                        f"–õ–µ–≥–∫–∏–µ –∑–∞–¥–∞—á–∏: {difficulty_stats['easy']} üëº\n" \
                        f"–°—Ä–µ–¥–Ω–∏–µ –∑–∞–¥–∞—á–∏: {difficulty_stats['medium']} üôÇ\n" \
                        f"–°–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏: {difficulty_stats['hard']} üò¢"
        
        bot.send_message(message.chat.id, stats_message)

def startWork(message, bot, types):
    markupButtonForTask = types.ReplyKeyboardMarkup(resize_keyboard=True)
    
    buttonForTaskNow = types.KeyboardButton("üöÄ –ù–∞—á–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ–π—á–∞—Å")
    buttonForTaskLater = types.KeyboardButton("üïí –ó–∞–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ –∑–∞–¥–∞—á –ø–æ—Ç–æ–º")
    buttonForCancel = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ")
    
    markupButtonForTask.add(buttonForTaskNow)
    markupButtonForTask.add(buttonForTaskLater)
    markupButtonForTask.add(buttonForCancel)
    
    bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å –∑–∞–¥–∞—á—É?', reply_markup=markupButtonForTask)